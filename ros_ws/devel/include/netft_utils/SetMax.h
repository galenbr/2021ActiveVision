// Generated by gencpp from file netft_utils/SetMax.msg
// DO NOT EDIT!


#ifndef NETFT_UTILS_MESSAGE_SETMAX_H
#define NETFT_UTILS_MESSAGE_SETMAX_H

#include <ros/service_traits.h>


#include <netft_utils/SetMaxRequest.h>
#include <netft_utils/SetMaxResponse.h>


namespace netft_utils
{

struct SetMax
{

typedef SetMaxRequest Request;
typedef SetMaxResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetMax
} // namespace netft_utils


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::netft_utils::SetMax > {
  static const char* value()
  {
    return "10e2f2a95c7447ec4aaa55f68d560d78";
  }

  static const char* value(const ::netft_utils::SetMax&) { return value(); }
};

template<>
struct DataType< ::netft_utils::SetMax > {
  static const char* value()
  {
    return "netft_utils/SetMax";
  }

  static const char* value(const ::netft_utils::SetMax&) { return value(); }
};


// service_traits::MD5Sum< ::netft_utils::SetMaxRequest> should match 
// service_traits::MD5Sum< ::netft_utils::SetMax > 
template<>
struct MD5Sum< ::netft_utils::SetMaxRequest>
{
  static const char* value()
  {
    return MD5Sum< ::netft_utils::SetMax >::value();
  }
  static const char* value(const ::netft_utils::SetMaxRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::netft_utils::SetMaxRequest> should match 
// service_traits::DataType< ::netft_utils::SetMax > 
template<>
struct DataType< ::netft_utils::SetMaxRequest>
{
  static const char* value()
  {
    return DataType< ::netft_utils::SetMax >::value();
  }
  static const char* value(const ::netft_utils::SetMaxRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::netft_utils::SetMaxResponse> should match 
// service_traits::MD5Sum< ::netft_utils::SetMax > 
template<>
struct MD5Sum< ::netft_utils::SetMaxResponse>
{
  static const char* value()
  {
    return MD5Sum< ::netft_utils::SetMax >::value();
  }
  static const char* value(const ::netft_utils::SetMaxResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::netft_utils::SetMaxResponse> should match 
// service_traits::DataType< ::netft_utils::SetMax > 
template<>
struct DataType< ::netft_utils::SetMaxResponse>
{
  static const char* value()
  {
    return DataType< ::netft_utils::SetMax >::value();
  }
  static const char* value(const ::netft_utils::SetMaxResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NETFT_UTILS_MESSAGE_SETMAX_H
