// Generated by gencpp from file netft_utils/SetThreshold.msg
// DO NOT EDIT!


#ifndef NETFT_UTILS_MESSAGE_SETTHRESHOLD_H
#define NETFT_UTILS_MESSAGE_SETTHRESHOLD_H

#include <ros/service_traits.h>


#include <netft_utils/SetThresholdRequest.h>
#include <netft_utils/SetThresholdResponse.h>


namespace netft_utils
{

struct SetThreshold
{

typedef SetThresholdRequest Request;
typedef SetThresholdResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetThreshold
} // namespace netft_utils


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::netft_utils::SetThreshold > {
  static const char* value()
  {
    return "0a518cd2ef382108fafe506ec521a6c7";
  }

  static const char* value(const ::netft_utils::SetThreshold&) { return value(); }
};

template<>
struct DataType< ::netft_utils::SetThreshold > {
  static const char* value()
  {
    return "netft_utils/SetThreshold";
  }

  static const char* value(const ::netft_utils::SetThreshold&) { return value(); }
};


// service_traits::MD5Sum< ::netft_utils::SetThresholdRequest> should match 
// service_traits::MD5Sum< ::netft_utils::SetThreshold > 
template<>
struct MD5Sum< ::netft_utils::SetThresholdRequest>
{
  static const char* value()
  {
    return MD5Sum< ::netft_utils::SetThreshold >::value();
  }
  static const char* value(const ::netft_utils::SetThresholdRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::netft_utils::SetThresholdRequest> should match 
// service_traits::DataType< ::netft_utils::SetThreshold > 
template<>
struct DataType< ::netft_utils::SetThresholdRequest>
{
  static const char* value()
  {
    return DataType< ::netft_utils::SetThreshold >::value();
  }
  static const char* value(const ::netft_utils::SetThresholdRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::netft_utils::SetThresholdResponse> should match 
// service_traits::MD5Sum< ::netft_utils::SetThreshold > 
template<>
struct MD5Sum< ::netft_utils::SetThresholdResponse>
{
  static const char* value()
  {
    return MD5Sum< ::netft_utils::SetThreshold >::value();
  }
  static const char* value(const ::netft_utils::SetThresholdResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::netft_utils::SetThresholdResponse> should match 
// service_traits::DataType< ::netft_utils::SetThreshold > 
template<>
struct DataType< ::netft_utils::SetThresholdResponse>
{
  static const char* value()
  {
    return DataType< ::netft_utils::SetThreshold >::value();
  }
  static const char* value(const ::netft_utils::SetThresholdResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NETFT_UTILS_MESSAGE_SETTHRESHOLD_H
