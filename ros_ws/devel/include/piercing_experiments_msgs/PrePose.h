// Generated by gencpp from file piercing_experiments_msgs/PrePose.msg
// DO NOT EDIT!


#ifndef PIERCING_EXPERIMENTS_MSGS_MESSAGE_PREPOSE_H
#define PIERCING_EXPERIMENTS_MSGS_MESSAGE_PREPOSE_H

#include <ros/service_traits.h>


#include <piercing_experiments_msgs/PrePoseRequest.h>
#include <piercing_experiments_msgs/PrePoseResponse.h>


namespace piercing_experiments_msgs
{

struct PrePose
{

typedef PrePoseRequest Request;
typedef PrePoseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PrePose
} // namespace piercing_experiments_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::piercing_experiments_msgs::PrePose > {
  static const char* value()
  {
    return "315b676814b67387d174953d2c38a6f1";
  }

  static const char* value(const ::piercing_experiments_msgs::PrePose&) { return value(); }
};

template<>
struct DataType< ::piercing_experiments_msgs::PrePose > {
  static const char* value()
  {
    return "piercing_experiments_msgs/PrePose";
  }

  static const char* value(const ::piercing_experiments_msgs::PrePose&) { return value(); }
};


// service_traits::MD5Sum< ::piercing_experiments_msgs::PrePoseRequest> should match 
// service_traits::MD5Sum< ::piercing_experiments_msgs::PrePose > 
template<>
struct MD5Sum< ::piercing_experiments_msgs::PrePoseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::piercing_experiments_msgs::PrePose >::value();
  }
  static const char* value(const ::piercing_experiments_msgs::PrePoseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::piercing_experiments_msgs::PrePoseRequest> should match 
// service_traits::DataType< ::piercing_experiments_msgs::PrePose > 
template<>
struct DataType< ::piercing_experiments_msgs::PrePoseRequest>
{
  static const char* value()
  {
    return DataType< ::piercing_experiments_msgs::PrePose >::value();
  }
  static const char* value(const ::piercing_experiments_msgs::PrePoseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::piercing_experiments_msgs::PrePoseResponse> should match 
// service_traits::MD5Sum< ::piercing_experiments_msgs::PrePose > 
template<>
struct MD5Sum< ::piercing_experiments_msgs::PrePoseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::piercing_experiments_msgs::PrePose >::value();
  }
  static const char* value(const ::piercing_experiments_msgs::PrePoseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::piercing_experiments_msgs::PrePoseResponse> should match 
// service_traits::DataType< ::piercing_experiments_msgs::PrePose > 
template<>
struct DataType< ::piercing_experiments_msgs::PrePoseResponse>
{
  static const char* value()
  {
    return DataType< ::piercing_experiments_msgs::PrePose >::value();
  }
  static const char* value(const ::piercing_experiments_msgs::PrePoseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PIERCING_EXPERIMENTS_MSGS_MESSAGE_PREPOSE_H
