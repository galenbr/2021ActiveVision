<?xml version="1.0"?>
<launch>

  <arg name="visual" default="ON" />
  <arg name="simulationMode" default="SIMULATION" />
  <arg name="config" />
  <env name="ROSCONSOLE_FORMAT" value='[${severity}]: ${message}'/>
  <include file="$(find active_vision)/launch/loadParams.launch" />
  <rosparam param="/active_vision/simulationMode" subst_value="True">$(arg simulationMode)</rosparam>

  <!-- Simulation with floating Kinect -->
  <group if="$(eval arg('simulationMode') == 'SIMULATION')">

    <group if="$(eval arg('visual') == 'ON')">
      <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find active_vision)/worlds/environmentWithKinect.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="recording" value="false"/>
        <arg name="debug" value="false"/>
      </include>
    </group>

    <group if="$(eval arg('visual') == 'OFF')">
      <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find active_vision)/worlds/environmentWithKinect.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="false"/>
        <arg name="headless" value="true"/>
        <arg name="recording" value="false"/>
        <arg name="debug" value="false"/>
      </include>
    </group>

  </group>

  <!-- Simulation with Kinect on Franka -->
  <group if="$(eval arg('simulationMode') == 'FRANKASIMULATION')">

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find active_vision)/worlds/environment.world"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="recording" value="false"/>
      <arg name="debug" value="false"/>
    </include>

    <param name="move_group/trajectory_execution/allowed_execution_duration_scaling" value="4.0" />

    <!--Ripped off wholesale from Craig for the time being, just setting things up.-->

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find active_vision)/desc/franka_camera.xacro" />
    <rosparam file="$(find active_vision)/config/panda_control.yaml" command="load" />

    <!--Add the YAML to the param Server-->
    <rosparam command = "load" file="$(find active_vision)/config/sim_robot_params.yaml" />

    <node name="spawn_franka_urdf" pkg="gazebo_ros" type="spawn_model"
      args="-param robot_description -urdf -model panda" />

    <!-- Start publishing to /tf for rviz -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true">
      <remap from="joint_states" to="panda/joint_states" />
    </node>

    <!-- Start moveit -->
    <include file="$(find active_vision)/launch/moveGroup.launch" />
    <!-- launch moveit API -->
    <node name="moveit_api" type="main_node" pkg="moveit_planner"/>

    <node name="get_pose" type="pose_node" pkg="moveit_planner" />

    <!-- Launch controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="joint_state_controller gazebo_ros_control" ns="/panda" />
    <include file="$(find panda_finger_torque_controller)/launch/main.launch" />

  </group>



</launch>
