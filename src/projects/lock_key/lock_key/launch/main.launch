<launch>
  <!-- Arguments -->
  <arg name="table_height" value="0.28" />
  <arg name="table_center" value="0.5" />
  <!--<arg name="table_width" value="1" />
  <arg name="table_length" value="0.6" /> -->

  <!-- Launch robot_description onto param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find lock_key)/desc/franka_camera.xacro" />
  <rosparam file="$(find lock_key)/config/panda_control.yaml" command="load" />

  <!-- Launch frames for rviz -->
  <node name="map_frame" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map world 100" />
  <node name="frame1_map" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 world panda_link0 100" />

  <!-- Launch gazebo and hardware_interfaces -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find lock_key)/desc/table.world" />
    <arg name="paused" value="true" />
  </include>
  <node name="spawn_franka_urdf" pkg="gazebo_ros" type="spawn_model"
  	args="-param robot_description -urdf -model panda -J panda_joint2 0.0 -J panda_joint6 0.785398 -J panda_joint7 0.785398" />
  <node name="spawn_table_urdf" pkg="gazebo_ros" type="spawn_model"
  	args="-file $(find lock_key)/desc/surface.urdf -urdf -model table_surface" />
  <node name="spawn_padlock_urdf" pkg="gazebo_ros" type="spawn_model"
  	args="-file $(find lock_key)/desc/padlock.urdf -urdf -model padlock -z $(arg table_height) -x $(arg table_center)" />
  <node name="spawn_key_urdf" pkg="gazebo_ros" type="spawn_model"
  	args="-file $(find lock_key)/desc/key.urdf -urdf -model key -z $(arg table_height) -x $(arg table_center)" />

  <!-- Launch controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller panda_hand_controller gazebo_ros_control" ns="/panda"/>

  <!-- Start publishing to /tf for rviz -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true">
    <remap from="joint_states" to="panda/joint_states" />
  </node>

  <!-- Start moveit -->
  <include file="$(find ref_benchmark_moveit_config)/launch/move_group.launch" />

  <!--<node name="table_randomizer" pkg="randomizer" type="randomizer_node"
  	args="$(arg table_height) $(arg table_center) $(arg table_width) $(arg table_length)" /> -->

  <!-- Start rviz -->
  <node name="rviz" type="rviz" pkg="rviz" args="-d $(find lock_key)/config/table_scene.rviz" />
</launch>
